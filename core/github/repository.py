from codecs import encode
from git import Repo
from os import urandom, walk
from shutil import rmtree
from core.github.parsers import all_parsers


# this wrapper is used for any non-repo source tree as well, we're reusing helpful interface
class Repository:
    _path_root = "tmp/"

    @classmethod
    def from_url(cls, url):
        return Repository(url, url, encode(urandom(16), "hex").decode())

    @classmethod
    def from_path(cls, name, path):
        return Repository(name, None, path)

    def __init__(self, name, url, path):
        self.name = name
        self._url = url
        self._path = self._path_root + path

    def clone(self):
        Repo.clone_from(self._url, self._path, depth=1)  # shallow clone

    def cleanup(self):
        rmtree(self._path)

    def parse_direct_dependencies(self):
        parsers = [parser() for parser in all_parsers]
        for path, _, files in walk(self._path):
            for filename in files:
                for parser in parsers:
                    yield from parser.parse_file_for_dependencies(path, filename)
